# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Node.js & NPM
# =================================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
# This is the most critical rule. The node_modules directory contains thousands of
# files, can be platform-specific, and can be perfectly regenerated by running `npm install`.
# It should NEVER be committed to version control.
node_modules/
.pnp
.pnp.js
.yarn/install-state.gz

# Compiled output
# We compile our TypeScript into this directory. It is generated code, not source code.
dist/
build/
.next/

# Environment variables
# This prevents sensitive information like API keys or database credentials from
# being committed to the repository. This is a critical security practice.
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# TypeScript
# =================================
# Ignore TypeScript cache files
*.tsbuildinfo

# Editor Directories and Files
# =================================
# Visual Studio Code
# We ignore the entire directory by default...
.vscode/
# ...but we explicitly make exceptions for files that ensure a consistent team environment.
# settings.json standardizes editor behavior (like format on save).
# launch.json standardizes debugging configurations.
!.vscode/settings.json
!.vscode/launch.json
!.vscode/extensions.json

# Operating System Files
# =================================
# macOS
.DS_Store

# Windows
Thumbs.db